Grammar

    0 $accept: start $end

    1 start: %empty
    2      | start elem

    3 elem: statement
    4     | varDec

    5 statement: name EQ exp SEMI

    6 varDec: type IDEN SEMI

    7 type: simpleType
    8     | type DOUBBRACK

    9 simpleType: INT
   10           | IDEN

   11 exp: name
   12    | NUM
   13    | newexp
   14    | exp relop exp
   15    | exp sumop exp
   16    | exp proop exp
   17    | unyop exp

   18 newexp: NEW IDEN LPAREN RPAREN
   19       | NEW IDEN expstar brackstar

   20 expstar: %empty
   21        | expstar LBRACK exp RBRACK

   22 brackstar: %empty
   23          | brackstar DOUBBRACK

   24 name: THIS
   25     | IDEN
   26     | name DOT IDEN
   27     | name LBRACK exp RBRACK

   28 relop: DEQ
   29      | NEQ
   30      | LEQ
   31      | GEQ
   32      | GT
   33      | LT

   34 sumop: PLUS
   35      | MINUS
   36      | OR

   37 proop: MULT
   38      | DIVD
   39      | MOD
   40      | AND

   41 unyop: PLUS
   42      | MINUS
   43      | BANG


Terminals, with rules where they appear

$end (0) 0
error (256)
DOT (258) 26
THIS (259) 24
LBRACK (260) 21 27
RBRACK (261) 21 27
DOUBBRACK (262) 8 23
NUM (263) 12
INT (264) 9
IDEN (265) 6 10 18 19 25 26
NEW (266) 18 19
LPAREN (267) 18
RPAREN (268) 18
DEQ (269) 28
NEQ (270) 29
LEQ (271) 30
GEQ (272) 31
GT (273) 32
LT (274) 33
PLUS (275) 34 41
MINUS (276) 35 42
OR (277) 36
MULT (278) 37
DIVD (279) 38
MOD (280) 39
AND (281) 40
BANG (282) 43
SEMI (283) 5 6
EQ (284) 5
RO (285)
SO (286)
PO (287)
UO (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
start (35)
    on left: 1 2, on right: 0 2
elem (36)
    on left: 3 4, on right: 2
statement (37)
    on left: 5, on right: 3
varDec (38)
    on left: 6, on right: 4
type (39)
    on left: 7 8, on right: 6 8
simpleType (40)
    on left: 9 10, on right: 7
exp (41)
    on left: 11 12 13 14 15 16 17, on right: 5 14 15 16 17 21 27
newexp (42)
    on left: 18 19, on right: 13
expstar (43)
    on left: 20 21, on right: 19 21
brackstar (44)
    on left: 22 23, on right: 19 23
name (45)
    on left: 24 25 26 27, on right: 5 11 26 27
relop (46)
    on left: 28 29 30 31 32 33, on right: 14
sumop (47)
    on left: 34 35 36, on right: 15
proop (48)
    on left: 37 38 39 40, on right: 16
unyop (49)
    on left: 41 42 43, on right: 17


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    2 start: start . elem

    $end  shift, and go to state 2
    THIS  shift, and go to state 3
    INT   shift, and go to state 4
    IDEN  shift, and go to state 5

    elem        go to state 6
    statement   go to state 7
    varDec      go to state 8
    type        go to state 9
    simpleType  go to state 10
    name        go to state 11


State 2

    0 $accept: start $end .

    $default  accept


State 3

   24 name: THIS .

    $default  reduce using rule 24 (name)


State 4

    9 simpleType: INT .

    $default  reduce using rule 9 (simpleType)


State 5

   10 simpleType: IDEN .
   25 name: IDEN .

    DOUBBRACK  reduce using rule 10 (simpleType)
    IDEN       reduce using rule 10 (simpleType)
    $default   reduce using rule 25 (name)


State 6

    2 start: start elem .

    $default  reduce using rule 2 (start)


State 7

    3 elem: statement .

    $default  reduce using rule 3 (elem)


State 8

    4 elem: varDec .

    $default  reduce using rule 4 (elem)


State 9

    6 varDec: type . IDEN SEMI
    8 type: type . DOUBBRACK

    DOUBBRACK  shift, and go to state 12
    IDEN       shift, and go to state 13


State 10

    7 type: simpleType .

    $default  reduce using rule 7 (type)


State 11

    5 statement: name . EQ exp SEMI
   26 name: name . DOT IDEN
   27     | name . LBRACK exp RBRACK

    DOT     shift, and go to state 14
    LBRACK  shift, and go to state 15
    EQ      shift, and go to state 16


State 12

    8 type: type DOUBBRACK .

    $default  reduce using rule 8 (type)


State 13

    6 varDec: type IDEN . SEMI

    SEMI  shift, and go to state 17


State 14

   26 name: name DOT . IDEN

    IDEN  shift, and go to state 18


State 15

   27 name: name LBRACK . exp RBRACK

    THIS   shift, and go to state 3
    NUM    shift, and go to state 19
    IDEN   shift, and go to state 20
    NEW    shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23
    BANG   shift, and go to state 24

    exp     go to state 25
    newexp  go to state 26
    name    go to state 27
    unyop   go to state 28


State 16

    5 statement: name EQ . exp SEMI

    THIS   shift, and go to state 3
    NUM    shift, and go to state 19
    IDEN   shift, and go to state 20
    NEW    shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23
    BANG   shift, and go to state 24

    exp     go to state 29
    newexp  go to state 26
    name    go to state 27
    unyop   go to state 28


State 17

    6 varDec: type IDEN SEMI .

    $default  reduce using rule 6 (varDec)


State 18

   26 name: name DOT IDEN .

    $default  reduce using rule 26 (name)


State 19

   12 exp: NUM .

    $default  reduce using rule 12 (exp)


State 20

   25 name: IDEN .

    $default  reduce using rule 25 (name)


State 21

   18 newexp: NEW . IDEN LPAREN RPAREN
   19       | NEW . IDEN expstar brackstar

    IDEN  shift, and go to state 30


State 22

   41 unyop: PLUS .

    $default  reduce using rule 41 (unyop)


State 23

   42 unyop: MINUS .

    $default  reduce using rule 42 (unyop)


State 24

   43 unyop: BANG .

    $default  reduce using rule 43 (unyop)


State 25

   14 exp: exp . relop exp
   15    | exp . sumop exp
   16    | exp . proop exp
   27 name: name LBRACK exp . RBRACK

    RBRACK  shift, and go to state 31
    DEQ     shift, and go to state 32
    NEQ     shift, and go to state 33
    LEQ     shift, and go to state 34
    GEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    OR      shift, and go to state 40
    MULT    shift, and go to state 41
    DIVD    shift, and go to state 42
    MOD     shift, and go to state 43
    AND     shift, and go to state 44

    relop  go to state 45
    sumop  go to state 46
    proop  go to state 47


State 26

   13 exp: newexp .

    $default  reduce using rule 13 (exp)


State 27

   11 exp: name .
   26 name: name . DOT IDEN
   27     | name . LBRACK exp RBRACK

    DOT     shift, and go to state 14
    LBRACK  shift, and go to state 15

    $default  reduce using rule 11 (exp)


State 28

   17 exp: unyop . exp

    THIS   shift, and go to state 3
    NUM    shift, and go to state 19
    IDEN   shift, and go to state 20
    NEW    shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23
    BANG   shift, and go to state 24

    exp     go to state 48
    newexp  go to state 26
    name    go to state 27
    unyop   go to state 28


State 29

    5 statement: name EQ exp . SEMI
   14 exp: exp . relop exp
   15    | exp . sumop exp
   16    | exp . proop exp

    DEQ    shift, and go to state 32
    NEQ    shift, and go to state 33
    LEQ    shift, and go to state 34
    GEQ    shift, and go to state 35
    GT     shift, and go to state 36
    LT     shift, and go to state 37
    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    OR     shift, and go to state 40
    MULT   shift, and go to state 41
    DIVD   shift, and go to state 42
    MOD    shift, and go to state 43
    AND    shift, and go to state 44
    SEMI   shift, and go to state 49

    relop  go to state 45
    sumop  go to state 46
    proop  go to state 47


State 30

   18 newexp: NEW IDEN . LPAREN RPAREN
   19       | NEW IDEN . expstar brackstar

    LPAREN  shift, and go to state 50

    $default  reduce using rule 20 (expstar)

    expstar  go to state 51


State 31

   27 name: name LBRACK exp RBRACK .

    $default  reduce using rule 27 (name)


State 32

   28 relop: DEQ .

    $default  reduce using rule 28 (relop)


State 33

   29 relop: NEQ .

    $default  reduce using rule 29 (relop)


State 34

   30 relop: LEQ .

    $default  reduce using rule 30 (relop)


State 35

   31 relop: GEQ .

    $default  reduce using rule 31 (relop)


State 36

   32 relop: GT .

    $default  reduce using rule 32 (relop)


State 37

   33 relop: LT .

    $default  reduce using rule 33 (relop)


State 38

   34 sumop: PLUS .

    $default  reduce using rule 34 (sumop)


State 39

   35 sumop: MINUS .

    $default  reduce using rule 35 (sumop)


State 40

   36 sumop: OR .

    $default  reduce using rule 36 (sumop)


State 41

   37 proop: MULT .

    $default  reduce using rule 37 (proop)


State 42

   38 proop: DIVD .

    $default  reduce using rule 38 (proop)


State 43

   39 proop: MOD .

    $default  reduce using rule 39 (proop)


State 44

   40 proop: AND .

    $default  reduce using rule 40 (proop)


State 45

   14 exp: exp relop . exp

    THIS   shift, and go to state 3
    NUM    shift, and go to state 19
    IDEN   shift, and go to state 20
    NEW    shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23
    BANG   shift, and go to state 24

    exp     go to state 52
    newexp  go to state 26
    name    go to state 27
    unyop   go to state 28


State 46

   15 exp: exp sumop . exp

    THIS   shift, and go to state 3
    NUM    shift, and go to state 19
    IDEN   shift, and go to state 20
    NEW    shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23
    BANG   shift, and go to state 24

    exp     go to state 53
    newexp  go to state 26
    name    go to state 27
    unyop   go to state 28


State 47

   16 exp: exp proop . exp

    THIS   shift, and go to state 3
    NUM    shift, and go to state 19
    IDEN   shift, and go to state 20
    NEW    shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23
    BANG   shift, and go to state 24

    exp     go to state 54
    newexp  go to state 26
    name    go to state 27
    unyop   go to state 28


State 48

   14 exp: exp . relop exp
   15    | exp . sumop exp
   16    | exp . proop exp
   17    | unyop exp .

    $default  reduce using rule 17 (exp)

    relop  go to state 45
    sumop  go to state 46
    proop  go to state 47


State 49

    5 statement: name EQ exp SEMI .

    $default  reduce using rule 5 (statement)


State 50

   18 newexp: NEW IDEN LPAREN . RPAREN

    RPAREN  shift, and go to state 55


State 51

   19 newexp: NEW IDEN expstar . brackstar
   21 expstar: expstar . LBRACK exp RBRACK

    LBRACK  shift, and go to state 56

    $default  reduce using rule 22 (brackstar)

    brackstar  go to state 57


State 52

   14 exp: exp . relop exp
   14    | exp relop exp .
   15    | exp . sumop exp
   16    | exp . proop exp

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39
    OR     shift, and go to state 40
    MULT   shift, and go to state 41
    DIVD   shift, and go to state 42
    MOD    shift, and go to state 43
    AND    shift, and go to state 44

    $default  reduce using rule 14 (exp)

    relop  go to state 45
    sumop  go to state 46
    proop  go to state 47


State 53

   14 exp: exp . relop exp
   15    | exp . sumop exp
   15    | exp sumop exp .
   16    | exp . proop exp

    MULT  shift, and go to state 41
    DIVD  shift, and go to state 42
    MOD   shift, and go to state 43
    AND   shift, and go to state 44

    $default  reduce using rule 15 (exp)

    relop  go to state 45
    sumop  go to state 46
    proop  go to state 47


State 54

   14 exp: exp . relop exp
   15    | exp . sumop exp
   16    | exp . proop exp
   16    | exp proop exp .

    $default  reduce using rule 16 (exp)

    relop  go to state 45
    sumop  go to state 46
    proop  go to state 47


State 55

   18 newexp: NEW IDEN LPAREN RPAREN .

    $default  reduce using rule 18 (newexp)


State 56

   21 expstar: expstar LBRACK . exp RBRACK

    THIS   shift, and go to state 3
    NUM    shift, and go to state 19
    IDEN   shift, and go to state 20
    NEW    shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23
    BANG   shift, and go to state 24

    exp     go to state 58
    newexp  go to state 26
    name    go to state 27
    unyop   go to state 28


State 57

   19 newexp: NEW IDEN expstar brackstar .
   23 brackstar: brackstar . DOUBBRACK

    DOUBBRACK  shift, and go to state 59

    $default  reduce using rule 19 (newexp)


State 58

   14 exp: exp . relop exp
   15    | exp . sumop exp
   16    | exp . proop exp
   21 expstar: expstar LBRACK exp . RBRACK

    RBRACK  shift, and go to state 60
    DEQ     shift, and go to state 32
    NEQ     shift, and go to state 33
    LEQ     shift, and go to state 34
    GEQ     shift, and go to state 35
    GT      shift, and go to state 36
    LT      shift, and go to state 37
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    OR      shift, and go to state 40
    MULT    shift, and go to state 41
    DIVD    shift, and go to state 42
    MOD     shift, and go to state 43
    AND     shift, and go to state 44

    relop  go to state 45
    sumop  go to state 46
    proop  go to state 47


State 59

   23 brackstar: brackstar DOUBBRACK .

    $default  reduce using rule 23 (brackstar)


State 60

   21 expstar: expstar LBRACK exp RBRACK .

    $default  reduce using rule 21 (expstar)
