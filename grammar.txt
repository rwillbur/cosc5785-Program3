UnaryOP : +
        | -
        | !
        ;

RelationOp : ==
           | !=
           | <=
           | >=
           | <
           | >
           ;

SumOp : +
      | -
      | || 
      ;

ProductOp : *
          | /
          | %
          | &&
          ;

SimpleType : int 
           | identifier
           ;

Type : SimpleType
     | Type []
     ;

VarDeclaration : Type identifier semi ; 

Name : this
     | identifier
     | Name . identifier
     | Name [Expression]
     ;

Expression : Name
           | number
           | null
           | Name ()
           | read ()
           | NewExpression
           | UnaryOp Expression
           | Expression RelationOp Expression
           | Expression SumOp Expression
           | Expression ProductOp Expression
           | (Expression)
           ;

NewExpression : new identifier ()
              | new identifier <[Expression]>* <[]>*
              ;

Element : VarDeclaration 
        | Expression
        ;
